using Common;
using Common.Presentation;
using Common.Responses;
using Common.Service;
using Common.Statuses;
using Business.Service.Interfaces;
using Data.Models.Entities;
using Data.Repository.Interfaces;
using System.Collections.Generic;
using System;
using System.Threading.Tasks;

namespace @Model.Namespace {
	<s>public class @Model.Name.Value</s><s>BaseService : EntityServiceBase {</s>
		public IMembershipService MembershipService { get; set; }
		public I<s>@Model.Name.Value</s>Repository <s>@Model.Name.Value</s>Repository { get; set; }

		private static readonly Auditing _auditing = new Auditing();

		public <s>@Model.Name.Value</s>BaseService(IMembershipService membershipService, I<s>@Model.Name.Value</s>Repository <s>@Model.Name.LowerCamelCase</s>Repository, ILogger logger) : base(_auditing, logger){
			this.MembershipService = membershipService;
			this.<s>@Model.Name.Value</s>Repository = <s>@Model.Name.LowerCamelCase</s>Repository;
		}

		@if(Model.Keys.Count > 1) {
		<s>public virtual TransactionResponse Create(<s>@Model.Name.Value</s> <s>@Model.Name.LowerCamelCase</s>){</s>
		}else{
		<s>public virtual InsertResponse<<@Model.Keys[0].DataType>> Create(<s>@Model.Name.Value</s> <s>@Model.Name.LowerCamelCase</s>){</s>
		}
			var prepareForSaveResult = base.PrepareForSave<<s>@Model.Name.Value</s>, <s>@Model.CSharpKeyTypeList</s>>(<s>@Model.Name.LowerCamelCase</s>, this.MembershipService.CurrentUserId());
			if (!prepareForSaveResult.IsValid) {
				return InsertResponse<s><@Model.Keys[0].DataType></s>.GetInsertResponse(TransactionResponse.GetTransactionResponse(ActionType.Create, Status.Failure, StatusDetail.Invalid, prepareForSaveResult.ValidationMessage));
			}
			var result = this.<s>@Model.Name.Value</s>Repository.Create(<s>@Model.Name.LowerCamelCase</s>);
			@if(Model.Keys.Count == 1){
			<s>@Model.Name.LowerCamelCase</s><s>.Id = result.Id;</s>
			}
			return result;
		}

		public virtual TransactionResponse Update(<s>@Model.Name.Value</s> <s>@Model.Name.LowerCamelCase</s>){
			var prepareForSaveResult = base.PrepareForSave<<s>@Model.Name.Value</s>, <s>@Model.CSharpKeyTypeList</s>>(<s>@Model.Name.LowerCamelCase</s>, this.MembershipService.CurrentUserId());
			if (!prepareForSaveResult.IsValid) {
				return TransactionResponse.GetTransactionResponse(ActionType.Update, Status.Failure, StatusDetail.Invalid, prepareForSaveResult.ValidationMessage);
			}
			var result = this.<s>@Model.Name.Value</s>Repository.Update(<s>@Model.Name.LowerCamelCase</s>);
			return result;
		}

		public virtual TransactionResponse Delete(<s>@Model.CSharpKeySignature</s>){
			var result = this.<s>@Model.Name.Value</s>Repository.Delete(<s>@Model.CSharpKeyList</s>);
			return result;
		}

		public virtual <s>@Model.Name.Value</s> SelectById(<s>@Model.CSharpKeySignature</s>) {
			return this.<s>@Model.Name.Value</s>Repository.SelectById(<s>@Model.CSharpKeyList</s>);
		}

		public virtual IPresentable<<s>@Model.Name.Value</s>> ReadAll(PageInfo pageInfo) {
			return this.<s>@Model.Name.Value</s>Repository.ReadAll(pageInfo);
		}

		@if(Model.Keys.Count > 1) {
		<s>public virtual async Task<TransactionResponse> CreateAsync(<s>@Model.Name.Value</s> <s>@Model.Name.LowerCamelCase</s>){</s>
		}else{
		<s>public virtual async Task<InsertResponse<@Model.Keys[0].DataType>> CreateAsync(<s>@Model.Name.Value</s> <s>@Model.Name.LowerCamelCase</s>){</s>
		}
			var prepareForSaveResult = await base.PrepareForSave_Async<<s>@Model.Name.Value</s>, <s>@Model.CSharpKeyTypeList</s>>(<s>@Model.Name.LowerCamelCase</s>, this.MembershipService.CurrentUserId());
			if (!prepareForSaveResult.IsValid) {
				return InsertResponse<s><@Model.Keys[0].DataType></s>.GetInsertResponse(TransactionResponse.GetTransactionResponse(ActionType.Create, Status.Failure, StatusDetail.Invalid, prepareForSaveResult.ValidationMessage));
			}
			var result = await this.<s>@Model.Name.Value</s>Repository.CreateAsync(<s>@Model.Name.LowerCamelCase</s>);
			@if(Model.Keys.Count == 1){
			<s>@Model.Name.LowerCamelCase</s><s>.Id = result.Id;</s>
			}
			return result;
		}

		public virtual async Task<TransactionResponse> UpdateAsync(<s>@Model.Name.Value</s> <s>@Model.Name.LowerCamelCase</s>){
			var prepareForSaveResult = await base.PrepareForSave_Async<<s>@Model.Name.Value</s>, <s>@Model.CSharpKeyTypeList</s>>(<s>@Model.Name.LowerCamelCase</s>, this.MembershipService.CurrentUserId());
			if (!prepareForSaveResult.IsValid) {
				return TransactionResponse.GetTransactionResponse(ActionType.Update, Status.Failure, StatusDetail.Invalid, prepareForSaveResult.ValidationMessage);
			}
			var result = await this.<s>@Model.Name.Value</s>Repository.UpdateAsync(<s>@Model.Name.LowerCamelCase</s>);
			return result;
		}

		public virtual async Task<TransactionResponse> DeleteAsync(<s>@Model.CSharpKeySignature</s>){
			var result = await this.<s>@Model.Name.Value</s>Repository.DeleteAsync(<s>@Model.CSharpKeyList</s>);
			return result;
		}

		public virtual async Task<<s>@Model.Name.Value</s>> SelectByIdAsync(<s>@Model.CSharpKeySignature</s>) {
			return await this.<s>@Model.Name.Value</s>Repository.SelectByIdAsync(<s>@Model.CSharpKeyList</s>);
		}

		public virtual async Task<IPresentable<<s>@Model.Name.Value</s>>> ReadAllAsync(PageInfo pageInfo) {
			return await this.<s>@Model.Name.Value</s>Repository.ReadAllAsync(pageInfo);
		}
	}
}